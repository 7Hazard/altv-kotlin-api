
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.21"

    // Publishing
    id "com.jfrog.bintray" version "1.7.3"
    id "maven"
}

// Config
def siteUrl = 'https://gitlab.com/7Hazard/altv-kotlin'
def gitUrl = 'https://gitlab.com/7Hazard/altv-kotlin.git'

version = "" //"DEV-"+new Date().format('dd-MMM-yyyy', TimeZone.getTimeZone('GMT'))
if (System.properties.containsKey("version")) version = System.getProperty("version")
println "Version is $version"
group = "7hazard"
//

repositories {
    jcenter()
    mavenCentral()

    maven {
        url  "https://hazard.bintray.com/Maven"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation '7hazard:altv-jvm-module:DEV-2019-03-12'
}

task pluginMetadata()  {
    doLast {
        new File("$projectDir/build/libs/plugin.cfg").text =
"""altv-kotlin${version == "" ? "" : "-$version"}.jar
alt.v.kotlin.MainKt"""
    }
}
compileKotlin.finalizedBy pluginMetadata

task fatJar(type: Jar) {
    baseName = project.name
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': 'alt.v.kotlin.MainKt'
    }
}
jar.finalizedBy fatJar



///
/// Bintray
///

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                name 'alt:V Kotlin Server API'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id '7hazard'
                        name 'Hazard'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

bintray {
    user = System.getProperty('user')
    key = System.getProperty('apikey')
    configurations = ['archives']
    pkg {
        repo = 'Maven'
        name = 'alt.v.kotlin'
        userOrg = "hazard"
        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        //publish = true
    }
}

bintrayUpload.doFirst {
    if (!System.properties.containsKey("version")) {
        throw new InvalidUserDataException("version not set (-Dversion)")
    }

    if (!System.properties.containsKey("user")) {
        throw new InvalidUserDataException("user not set (-Duser)")
    }

    if (!System.properties.containsKey("apikey")) {
        throw new InvalidUserDataException("apikey not set (-Dapikey)")
    }
}
